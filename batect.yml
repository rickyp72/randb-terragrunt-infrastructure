containers:
  service-image:
    build_directory: .
    dockerfile: Dockerfile
    working_directory: /app
    build_args:
      commit_sha: ${GITHUB_SHA:-unknown}
      version: ${GITHUB_REF_NAME:-unknown}
    run_as_current_user:
      enabled: true
      home_directory: /home/batect-container-user
    volumes:
      - local: .
        container: /app
#    environment:
#      AWS_ACCOUNT: ${AWS_ACCOUNT}
#      AWS_REGION: ${AWS_REGION}
#      AWS_DEFAULT_REGION: ${AWS_REGION}
#      COGNITO_USER_POOL_ID: ${COGNITO_USER_POOL_ID}
#      DATA_BUCKET: ${DATA_BUCKET}
#      DOMAIN_NAME: ${DOMAIN_NAME}
#      RESOURCE_PREFIX: ${RESOURCE_PREFIX}
#      # Optional use when working locally
#      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-}
#      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-}
#      AWS_SESSION_TOKEN: ${AWS_SESSION_TOKEN:-}


tasks:
  runtime-environment:
    description: Build runtime environment
    run:
      container: service-image
      command: sh -c 'echo "Environment created - Docker image \"changelog\""'

  run-custom-task:
    description: Run a pre-defined task in the container, defined in task_runner.sh
    run:
      container: service-image

  shell:
    description: Shell into the container
    run:
      container: service-image
      command: bash

  detect-secrets:
    description: Detect tracked files for secrets
    run:
      container: service-image
      command: sh -c 'git ls-files -z -- . ':!:*.drawio' | xargs -0 detect-secrets-hook --baseline .secrets.baseline'

  ignore-secrets:
    description: Ignore detected secrets (add them to the .secrets.baseline file)
    run:
      container: service-image
      command: bash -c 'detect-secrets scan > .secrets.baseline'

  detect-vulnerabilities:
    description: Detect common vulnerabilities
    run:
      container: service-image
      command: "bandit -qr modules"

  lint:
    description: Lint the source and test code
    run:
      container: service-image
      command: "flake8 modules organizations"

  generate_latest_changelog:
    description: Parse the changelog file for the release's changes
    run:
      container: service-image
      command: "python get_latest_release_changelog.py"
